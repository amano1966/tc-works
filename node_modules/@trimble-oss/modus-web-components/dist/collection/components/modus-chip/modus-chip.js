// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { h } from "@stencil/core";
import { IconClose } from "../../icons/generated-icons/IconClose";
import { IconCheck } from "../../icons/svgs/icon-check";
import { ModusIconMap } from "../../icons/ModusIconMap";
import { IconRemove } from "../../icons/svgs/icon-remove";
export class ModusChip {
    constructor() {
        this.classByChipStyle = new Map([
            ['outline', 'style-outline'],
            ['solid', 'style-solid'],
        ]);
        this.classBySize = new Map([
            ['medium', 'medium'],
            ['small', 'small'],
        ]);
        this.ariaLabel = undefined;
        this.chipStyle = 'solid';
        this.disabled = false;
        this.hasError = false;
        this.imageUrl = undefined;
        this.advancedChip = undefined;
        this.showCheckmark = false;
        this.showClose = false;
        this.size = 'medium';
        this.value = undefined;
        this.chipId = undefined;
        this.maxWidth = undefined;
        this.active = false;
    }
    elementKeyupHandler(event) {
        switch (event.code) {
            case 'Escape':
                if (!this.showClose) {
                    return;
                }
                this.closeClick.emit(event);
                break;
        }
    }
    elementKeydownHandler(event) {
        if (event.code === 'Enter' || event.code === 'Space') {
            event.preventDefault();
            this.chipClick.emit(event);
        }
    }
    onChipClick(event) {
        if (event.defaultPrevented) {
            return;
        } // Don't emit chipClick if closeClick has emitted.
        this.chipClick.emit(event);
    }
    onCloseClick(event) {
        this.closeClick.emit(event);
        event.preventDefault();
    }
    render() {
        var _a;
        const chipClass = `
      modus-chip ${this.disabled ? 'disabled' : ''}
      ${this.hasError ? 'has-error' : ''}
      ${this.classByChipStyle.get(this.chipStyle)}
      ${this.classBySize.get(this.size)}
      ${!this.showCheckmark && !this.imageUrl ? 'no-left-icon' : null}
      ${!this.showClose ? 'no-right-icon' : null}
      ${this.active ? 'active' : ''}
    `;
        const style = {
            style: {
                'max-width': (_a = this.maxWidth) !== null && _a !== void 0 ? _a : undefined,
            },
        };
        return (h("button", { key: '6cbd7f607b28fc33022c14e40f6b8a3683660e6b', "aria-disabled": this.disabled ? 'true' : undefined, "aria-label": this.ariaLabel || undefined, id: this.chipId || undefined, class: chipClass, part: "chipButton", onClick: this.disabled ? null : (event) => this.onChipClick(event), tabIndex: 0, style: this.advancedChip ? { 'border-radius': '8px' } : {}, type: "button" }, this.imageUrl ? (h("img", { src: this.imageUrl, alt: "" })) : this.showCheckmark ? (h(IconCheck, { size: '16' })) : null, h("span", Object.assign({ key: '262d81e42652bec6f273f37f8c238804171b727c' }, style), this.value), this.advancedChip && h(ModusIconMap, { icon: "caret_down", size: '16' }), this.showClose ? (this.advancedChip ? (h(IconClose, { onClick: this.disabled ? null : (event) => this.onCloseClick(event), size: '16' })) : (h(IconRemove, { onClick: this.disabled ? null : (event) => this.onCloseClick(event), size: '16' }))) : null));
    }
    static get is() { return "modus-chip"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-chip.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-chip.css"]
        };
    }
    static get properties() {
        return {
            "ariaLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string | null",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The chip's aria-label."
                },
                "attribute": "aria-label",
                "reflect": false
            },
            "chipStyle": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'outline' | 'solid'",
                    "resolved": "\"outline\" | \"solid\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The chip's style."
                },
                "attribute": "chip-style",
                "reflect": false,
                "defaultValue": "'solid'"
            },
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Whether the chip is disabled."
                },
                "attribute": "disabled",
                "reflect": false,
                "defaultValue": "false"
            },
            "hasError": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Whether the chip has an error."
                },
                "attribute": "has-error",
                "reflect": false,
                "defaultValue": "false"
            },
            "imageUrl": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The image's url."
                },
                "attribute": "image-url",
                "reflect": false
            },
            "advancedChip": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Whether the chip is in advanced state"
                },
                "attribute": "advanced-chip",
                "reflect": false
            },
            "showCheckmark": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Whether to show the checkmark."
                },
                "attribute": "show-checkmark",
                "reflect": false,
                "defaultValue": "false"
            },
            "showClose": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Whether to show the close icon."
                },
                "attribute": "show-close",
                "reflect": false,
                "defaultValue": "false"
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'medium' | 'small'",
                    "resolved": "\"medium\" | \"small\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The chip's size."
                },
                "attribute": "size",
                "reflect": false,
                "defaultValue": "'medium'"
            },
            "value": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The chip's value."
                },
                "attribute": "value",
                "reflect": false
            },
            "chipId": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) the chip's id"
                },
                "attribute": "chip-id",
                "reflect": false
            },
            "maxWidth": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Maximum width for the Chip's text and shows ellipsis when truncated"
                },
                "attribute": "max-width",
                "reflect": false
            },
            "active": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) Whether the chip is active."
                },
                "attribute": "active",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
    static get events() {
        return [{
                "method": "chipClick",
                "name": "chipClick",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires on chip click."
                },
                "complexType": {
                    "original": "any",
                    "resolved": "any",
                    "references": {}
                }
            }, {
                "method": "closeClick",
                "name": "closeClick",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires on close icon click."
                },
                "complexType": {
                    "original": "any",
                    "resolved": "any",
                    "references": {}
                }
            }];
    }
    static get listeners() {
        return [{
                "name": "keyup",
                "method": "elementKeyupHandler",
                "target": undefined,
                "capture": false,
                "passive": false
            }, {
                "name": "keydown",
                "method": "elementKeydownHandler",
                "target": undefined,
                "capture": false,
                "passive": false
            }];
    }
}
