import { Host, h, // eslint-disable-line @typescript-eslint/no-unused-vars
 } from "@stencil/core";
import { IconClose } from "../../../icons/svgs/icon-close";
export class ModusNavbarSearchOverlay {
    componentDidRender() {
        var _a;
        (_a = this.modusTextInput) === null || _a === void 0 ? void 0 : _a.focusInput();
    }
    render() {
        return (h(Host, { key: 'a46ddd8fae91428a953664b254022e34aec0faea' }, h("div", { key: 'a1a056390e6b0be61b8d1436b8a58e3edd4f1393', class: "overlay-wrapper" }, h("div", { key: '0e7e82a55e7f4d05e796e0aacb5d594fe9028641', class: "search-box" }, h("modus-text-input", { key: '03094e0fe493ecf14b192e59e5ab41a286301d13', placeholder: "Search", size: "large", type: "search", clearable: true, onValueChange: (event) => this.search.emit(event.detail), "include-search-icon": true, ref: (el) => (this.modusTextInput = el) })), h("div", { key: '1582aee27b56f2b681e86eca6ff2fd97d9637f5b', class: "navbar-button", "data-test-id": "close-button" }, h("span", { key: '97aac7cca2c843862fdf1a9d0339921f103faf59', class: "navbar-button-icon", role: "button", tabIndex: 0, onKeyDown: (event) => event.code === 'Enter' && this.close.emit(), onClick: () => this.close.emit() }, h(IconClose, { key: '2075c38346b3c9a853ff3657610ea9b2163801e4', size: "24" }))))));
    }
    static get is() { return "modus-navbar-search-overlay"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-navbar-search-overlay.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-navbar-search-overlay.css"]
        };
    }
    static get events() {
        return [{
                "method": "close",
                "name": "close",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires on clicking on close button of search overlay"
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }, {
                "method": "search",
                "name": "search",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "An event that fires on search value change."
                },
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                }
            }];
    }
    static get elementRef() { return "element"; }
}
