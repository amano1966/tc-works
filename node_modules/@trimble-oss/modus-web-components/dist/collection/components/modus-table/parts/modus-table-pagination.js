import { h, // eslint-disable-line @typescript-eslint/no-unused-vars
 } from "@stencil/core";
import { translate } from "../../../lang/translations";
export const ModusTablePagination = ({ context: { tableInstance: table, pageSizeList, data, manualPaginationOptions }, }) => {
    var _a, _b;
    const { options, getState, getPageCount, getExpandedRowModel, setPageIndex, setPageSize } = table;
    const { pageIndex, pageSize } = getState().pagination;
    const optionsList = pageSizeList.map((option) => ({ display: option }));
    const totalCount = (_a = manualPaginationOptions === null || manualPaginationOptions === void 0 ? void 0 : manualPaginationOptions.totalRecords) !== null && _a !== void 0 ? _a : data === null || data === void 0 ? void 0 : data.length;
    const selectedPageSize = (_b = optionsList.find((l) => l.display === pageSize)) === null || _b === void 0 ? void 0 : _b.display;
    const handleChange = (event) => {
        const selectedValue = event.detail;
        setPageSize(Number(selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.display));
    };
    return (h("div", { class: "pagination-container" }, h("div", { class: "items-per-page" }, h("span", null, translate('pageView')), h("modus-select", { ariaLabel: "Select page size", "options-display-prop": "display", options: optionsList, placeholder: translate('pleaseSelect'), onValueChange: handleChange, value: selectedPageSize })), h("div", { class: "pagination-and-count" }, h("div", { class: "total-count" }, h("span", null, translate('showingResult')), h("span", null, pageIndex * pageSize + 1), h("span", null, "-"), h("span", null, pageIndex + 1 === getPageCount()
        ? !options.manualPagination && options.paginateExpandedRows
            ? getExpandedRowModel().rows.length
            : totalCount
        : (pageIndex + 1) * pageSize), h("span", null, translate('of')), h("span", null, !options.manualPagination && options.paginateExpandedRows ? getExpandedRowModel().rows.length : totalCount), ' '), h("modus-pagination", { "active-page": pageIndex + 1, "max-page": getPageCount(), "min-page": 1, onPageChange: (event) => setPageIndex(event.detail - 1) }))));
};
