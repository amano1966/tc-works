// eslint-disable-next-line
import { h } from "@stencil/core";
import { IconInfo } from "../../icons/generated-icons/IconInfo";
import { IconHelp } from "../../icons/generated-icons/IconHelp";
import { ModusIconMap } from "../../icons/ModusIconMap";
export class ModusMessage {
    constructor() {
        this.classByType = new Map([
            ['info', 'info'],
            ['question', 'question'],
        ]);
        this.ariaLabel = undefined;
        this.icon = undefined;
        this.type = 'info';
    }
    render() {
        const className = `modus-message ${this.classByType.get(this.type)}`;
        return (h("div", { key: '2b980a6a5e174df1b172f910bbf8d5d15945c501', "aria-label": this.ariaLabel || undefined, class: className, role: "note" }, h("span", { key: 'bc2516de0ccef91b97d48e4b3e5ffd28fce185ab', class: "icon" }, this.icon ? (h(ModusIconMap, { icon: this.icon, size: "18" })) : this.type === 'info' ? (h(IconInfo, { size: "18" })) : this.type === 'question' ? (h(IconHelp, { size: "18" })) : null), h("span", { key: '05bea7606ec57b12cbb209dea6dbf474b6b81d1d', class: "message" }, h("slot", { key: 'ed0cd66cec69eafa299fd74d7a6b0d3302c2c52d' }))));
    }
    static get is() { return "modus-message"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["modus-message.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["modus-message.css"]
        };
    }
    static get properties() {
        return {
            "ariaLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string | null",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "(optional) The message's aria-label."
                },
                "attribute": "aria-label",
                "reflect": false
            },
            "icon": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "(optional) The message's icon."
                },
                "attribute": "icon",
                "reflect": false
            },
            "type": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'info' | 'question'",
                    "resolved": "\"info\" | \"question\"",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "(optional) The message's type."
                },
                "attribute": "type",
                "reflect": false,
                "defaultValue": "'info'"
            }
        };
    }
}
