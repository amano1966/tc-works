import { p as proxyCustomElement, H, h } from './p-85681586.js';

const modusNavbarButtonMenuCss = ".button-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;padding:0;top:0;width:max-content}.button-menu.reverse{left:0}";
const ModusNavbarButtonMenuStyle0 = modusNavbarButtonMenuCss;

const ModusNavbarButtonMenu = /*@__PURE__*/ proxyCustomElement(class ModusNavbarButtonMenu extends H {
    constructor() {
        super();
        this.__registerHost();
        this.reverse = undefined;
    }
    render() {
        const menuClasses = {
            'button-menu': true,
            reverse: this.reverse,
        };
        return (h("div", { key: 'e8656ea27ea109cc8149411ce9ecb2d1a0fc60f0', class: menuClasses }, h("slot", { key: '121ef3a22ddd0ff78ddb482b86c416d12405b83d' })));
    }
    static get style() { return ModusNavbarButtonMenuStyle0; }
}, [4, "modus-navbar-button-menu", {
        "reverse": [4]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["modus-navbar-button-menu"];
    components.forEach(tagName => { switch (tagName) {
        case "modus-navbar-button-menu":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ModusNavbarButtonMenu);
            }
            break;
    } });
}

export { ModusNavbarButtonMenu as M, defineCustomElement as d };
