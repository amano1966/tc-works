import { p as proxyCustomElement, H, d as createEvent, h } from './p-85681586.js';
import { M as ModusIconMap } from './p-cf76d4e3.js';

const ModusIcon$1 = /*@__PURE__*/ proxyCustomElement(class ModusIcon extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.iconClick = createEvent(this, "iconClick", 7);
        this.name = undefined;
        this.size = '16';
        this.color = undefined;
    }
    onClick(event) {
        if (event.defaultPrevented) {
            return;
        }
        this.iconClick.emit(event);
    }
    render() {
        return h(ModusIconMap, { key: 'b3f085a5fc6a58a2719003b50f875f90892cb749', icon: this.name, onClick: (event) => this.onClick(event), size: this.size, color: this.color });
    }
}, [1, "modus-icon", {
        "name": [1],
        "size": [1],
        "color": [1]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["modus-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "modus-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ModusIcon$1);
            }
            break;
    } });
}

const ModusIcon = ModusIcon$1;
const defineCustomElement = defineCustomElement$1;

export { ModusIcon, defineCustomElement };
