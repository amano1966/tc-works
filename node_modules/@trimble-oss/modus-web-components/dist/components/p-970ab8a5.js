import { p as proxyCustomElement, H, h } from './p-85681586.js';

const modusNavbarNotificationsMenuCss = ".notifications-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;width:max-content}.notifications-menu.reverse{left:0}";
const ModusNavbarNotificationsMenuStyle0 = modusNavbarNotificationsMenuCss;

const ModusNavbarNotificationsMenu = /*@__PURE__*/ proxyCustomElement(class ModusNavbarNotificationsMenu extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.reverse = undefined;
    }
    render() {
        const direction = this.reverse ? 'reverse' : '';
        return (h("div", { key: '96c8cd5d832dc50cf93868413278ed33e0118803', class: `notifications-menu ${direction}`, onClick: (event) => event.preventDefault() }, h("slot", { key: '021a46f01682b50bf1a12413d7e008c97620d350' })));
    }
    static get style() { return ModusNavbarNotificationsMenuStyle0; }
}, [1, "modus-navbar-notifications-menu", {
        "reverse": [4]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["modus-navbar-notifications-menu"];
    components.forEach(tagName => { switch (tagName) {
        case "modus-navbar-notifications-menu":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ModusNavbarNotificationsMenu);
            }
            break;
    } });
}

export { ModusNavbarNotificationsMenu as M, defineCustomElement as d };
