'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-8ad089ae.js');
const ModusIconMap = require('./ModusIconMap-4076f8df.js');
const iconClose = require('./icon-close-43dfacc2.js');
require('./IconChevronLeft-cd7905fc.js');
require('./IconChevronRight-3b379c08.js');
require('./IconClose-cec27da2.js');
require('./IconExpand-15ffe311.js');
require('./IconVisibilityOn-0cf159be.js');

const modusNavbarAppsMenuCss = ".apps-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;align-items:flex-start;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;max-height:605px;overflow-y:auto;padding:0.5rem;width:max-content}.apps-menu.reverse{left:0}.apps-menu .app-div{width:100%}.apps-menu .app{border-color:var(--modus-navbar-popup-border-color, #464b52);border-radius:0.25rem;box-sizing:border-box;color:var(--modus-body-color, #252a2e);cursor:default;display:flex;padding:0.25rem;text-decoration:none;width:100%}.apps-menu .app:hover{background-color:var(--modus-navbar-icon-hover-bg, #e0e1e9);cursor:pointer}.apps-menu .app:active{background-color:var(--modus-navbar-icon-active-bg, #cbcdd6)}.apps-menu .app:not(:last-child){margin-bottom:0.5rem}.apps-menu .app img{margin-right:0.75rem}.apps-menu .app .right{align-self:center}.apps-menu .app .right .name{font-size:0.875rem;font-weight:600}.apps-menu .app .right .description{font-size:0.75rem}.apps-menu .category{border-top:0.0625rem solid var(--modus-navbar-popup-border-color, #464b52);color:var(--modus-body-color, #252a2e);font-size:0.75rem;font-weight:600;margin-top:0.5rem;padding-bottom:0.625rem;padding-top:1.125rem}";
const ModusNavbarAppsMenuStyle0 = modusNavbarAppsMenuCss;

const ModusNavbarAppsMenu = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.appOpen = index.createEvent(this, "appOpen", 7);
        this.apps = undefined;
        this.reverse = undefined;
    }
    clickAppHandler(event, app) {
        event.preventDefault();
        window.open(app.url, '_blank');
        this.appOpen.emit(app);
    }
    render() {
        var _a;
        const direction = this.reverse ? 'reverse' : '';
        return (index.h("div", { key: '43839464e5f074c69989af7647bc6a228cd8d150', class: `apps-menu ${direction}`, onClick: (event) => event.preventDefault() }, (_a = this.apps) === null || _a === void 0 ? void 0 : _a.map((app) => (index.h("div", { class: "app-div" }, app.showCategory ? index.h("div", { class: "category" }, app.category) : null, index.h("a", { class: "app", href: app.url, onClick: (event) => this.clickAppHandler(event, app) }, index.h("img", { src: app.logoUrl, alt: "", height: "32", width: "32" }), index.h("div", { class: "right" }, index.h("div", { class: "name" }, app.name), app.description ? index.h("div", { class: "description" }, app.description) : null)))))));
    }
};
ModusNavbarAppsMenu.style = ModusNavbarAppsMenuStyle0;

const modusNavbarButtonMenuCss = ".button-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;padding:0;top:0;width:max-content}.button-menu.reverse{left:0}";
const ModusNavbarButtonMenuStyle0 = modusNavbarButtonMenuCss;

const ModusNavbarButtonMenu = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.reverse = undefined;
    }
    render() {
        const menuClasses = {
            'button-menu': true,
            reverse: this.reverse,
        };
        return (index.h("div", { key: 'e8656ea27ea109cc8149411ce9ecb2d1a0fc60f0', class: menuClasses }, index.h("slot", { key: '121ef3a22ddd0ff78ddb482b86c416d12405b83d' })));
    }
};
ModusNavbarButtonMenu.style = ModusNavbarButtonMenuStyle0;

const DEFAULT_CONTAINER_LAYOUT = Object.freeze({
    position: 'fixed',
    top: '0px',
    left: '0px',
    height: '0px',
});
const DOM_OBSERVER_CONFIG = Object.freeze({
    childList: true,
});

const modusNavbarMainMenuCss = ".main-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;background-color:var(--modus-navbar-popup-bg, #fff);border:unset;border-radius:0 0 0.125rem 0.125rem;box-sizing:border-box;clip-path:inset(0 -10px -10px -10px);cursor:default;max-width:616px;min-width:248px;padding:0;width:max-content}";
const ModusNavbarMainMenuStyle0 = modusNavbarMainMenuCss;

const ModusNavbarMainMenu = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.observer = null;
        this.updateContainerLayout = () => {
            var _a;
            const navbarRect = (_a = this.parentNavbar) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
            if (!navbarRect) {
                return;
            }
            const availableHeight = window.innerHeight - navbarRect.bottom;
            const containerHeight = Math.min(availableHeight, window.innerHeight);
            this.containerLayout = Object.assign(Object.assign({}, this.containerLayout), { top: `${navbarRect.bottom}px`, left: `${navbarRect.left}px`, height: `${containerHeight}px` });
        };
        this.parentNavbar = undefined;
        this.containerLayout = DEFAULT_CONTAINER_LAYOUT;
    }
    componentDidLoad() {
        this.updateContainerLayout();
        this.addSubscriptions();
    }
    disconnectedCallback() {
        this.removeSubscriptions();
    }
    addSubscriptions() {
        window.addEventListener('resize', this.updateContainerLayout);
        window.addEventListener('scroll', this.updateContainerLayout);
        this.connectDOMObserver();
    }
    removeSubscriptions() {
        window.removeEventListener('resize', this.updateContainerLayout);
        window.removeEventListener('scroll', this.updateContainerLayout);
        this.disconnectDOMObserver();
    }
    connectDOMObserver() {
        this.observer = new MutationObserver(this.updateContainerLayout);
        this.observer.observe(document.body, DOM_OBSERVER_CONFIG);
    }
    disconnectDOMObserver() {
        if (this.observer) {
            this.observer.disconnect();
        }
    }
    render() {
        const positionStyle = Object.assign({}, this.containerLayout);
        return (index.h("div", { key: '1fddaf35c20631096f4cb7068e9fd21e280bb89d', class: "main-menu", style: positionStyle, onClick: (event) => event.preventDefault() }, index.h("slot", { key: 'f885fe5064d956a9b4703b4bc3c4dbef0a212722' })));
    }
};
ModusNavbarMainMenu.style = ModusNavbarMainMenuStyle0;

const modusNavbarNotificationsMenuCss = ".notifications-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;width:max-content}.notifications-menu.reverse{left:0}";
const ModusNavbarNotificationsMenuStyle0 = modusNavbarNotificationsMenuCss;

const ModusNavbarNotificationsMenu = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.reverse = undefined;
    }
    render() {
        const direction = this.reverse ? 'reverse' : '';
        return (index.h("div", { key: '96c8cd5d832dc50cf93868413278ed33e0118803', class: `notifications-menu ${direction}`, onClick: (event) => event.preventDefault() }, index.h("slot", { key: '021a46f01682b50bf1a12413d7e008c97620d350' })));
    }
};
ModusNavbarNotificationsMenu.style = ModusNavbarNotificationsMenuStyle0;

const modusNavbarProfileMenuCss = ".profile-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-navbar-popup-border-color, #cbcdd6);border-radius:0.25rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0;position:absolute;right:0;top:48px;z-index:100;align-items:center;background-color:var(--modus-navbar-popup-bg, #fff);cursor:default;padding:0;width:19rem}.profile-menu .user{align-items:center;display:flex;flex-direction:column;justify-content:center;padding:1rem 1.5rem 0 1.5rem}.profile-menu .user .avatar,.profile-menu .user .initials{background-color:transparent;border-radius:50%;height:6rem;margin-bottom:1rem;user-select:none;width:6rem}.profile-menu .user .initials{align-items:center;background-color:var(--modus-navbar-icon-color, #252a2e);color:var(--modus-navbar-profile-icon-initials-color, #fff);display:flex;font-size:1.5rem;font-weight:600;justify-content:center}.profile-menu .user .user-details{align-items:center;display:flex;flex-direction:column;justify-content:center;margin-bottom:1rem;max-width:16rem}.profile-menu .user .user-details .username{font-size:1rem;font-weight:600;overflow-wrap:anywhere;text-align:center;width:fit-content}.profile-menu .user .user-details .email{font-size:0.75rem;overflow-wrap:anywhere;text-align:center}.profile-menu.profile-menu-blue .user .avatar,.profile-menu.profile-menu-blue .user .initials{background-color:#b7b9c3;color:var(--modus-navbar-blue-profile-icon-initials-color, #0e416c)}.profile-menu .links{cursor:pointer;margin-bottom:0.75rem;max-width:19rem;user-select:none;width:100%}.profile-menu .links .link-item{align-items:center;display:flex;flex-direction:row;white-space:normal;word-wrap:break-word}.profile-menu .links .icon{align-items:center;display:flex;justify-content:center;margin-right:1rem}.profile-menu .sign-out{background-color:var(--modus-navbar-profile-menu-sign-out-background-color, #f1f1f6);user-select:none;width:100%}.profile-menu .sign-out div{color:var(--modus-blue, #0063a3);cursor:pointer;font-size:0.875rem;padding:0.625rem 1rem}@media (hover: hover){.profile-menu .sign-out div:hover{text-decoration:underline}}.profile-menu.reverse{left:0}";
const ModusNavbarProfileMenuStyle0 = modusNavbarProfileMenuCss;

const ModusNavbarProfileMenu = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.linkClick = index.createEvent(this, "linkClick", 7);
        this.signOutClick = index.createEvent(this, "signOutClick", 7);
        this.avatarUrl = undefined;
        this.email = undefined;
        this.initials = undefined;
        this.links = undefined;
        this.signOutText = 'Sign out';
        this.reverse = undefined;
        this.username = undefined;
        this.variant = 'default';
    }
    signOutKeydownHandler(event) {
        if (event.code !== 'Enter') {
            return;
        }
        this.signOutClick.emit();
    }
    render() {
        var _a;
        const direction = this.reverse ? 'reverse' : '';
        const variant = this.variant === 'default' ? '' : `profile-menu-${this.variant}`;
        return (index.h("div", { key: '90cca497d06325e8ff3b0bb776ff7ee115fc2d85', class: `profile-menu ${direction} ${variant}`, onClick: (event) => event.preventDefault() }, index.h("div", { key: '1b6d24352bd6e5188b96c585115f88a142099fba', class: "user" }, this.avatarUrl ? (index.h("img", { class: "avatar", src: this.avatarUrl, alt: "Avatar" })) : (index.h("span", { class: "initials" }, this.initials)), index.h("div", { key: '6a9504936beef21a16c5fc730f818cca46546660', class: "user-details" }, index.h("div", { key: '993b31653b5104f56dd0a494fc7df75683640fe0', class: "username" }, this.username), index.h("div", { key: '92b8228a67399a964daf78ed4e2e6536498f5d35', class: "email" }, this.email))), ((_a = this.links) === null || _a === void 0 ? void 0 : _a.length) ? (index.h("modus-list", { class: "links" }, this.links.map((link) => {
            return (index.h("modus-list-item", { borderless: true, onItemClick: () => this.linkClick.emit(link.id) }, index.h("div", { class: "link-item" }, link.icon && (index.h("div", { class: "icon" }, index.h(ModusIconMap.ModusIconMap, { icon: link.icon, size: "24" }))), link.display)));
        }))) : null, index.h("slot", { key: 'f30f7d8f565805b4a500f0fa3d91a99f303b6e59' }), index.h("div", { key: '1697274a71163193dec204390aefd34ed3762fb5', class: "sign-out", onClick: () => this.signOutClick.emit(), onKeyDown: (event) => this.signOutKeydownHandler(event), tabIndex: 0 }, index.h("div", { key: '4497874cf435a21686d9415c96a2ecb7dd344c66' }, this.signOutText))));
    }
};
ModusNavbarProfileMenu.style = ModusNavbarProfileMenuStyle0;

const modusNavbarSearchOverlayCss = ":host{display:block}.overlay-wrapper{display:flex;flex-shrink:0;gap:45px}.overlay-wrapper .search-box{display:flex;flex-grow:2;justify-content:center}.overlay-wrapper .search-box modus-text-input{display:block;margin-left:1rem;max-width:764px;min-width:185px;width:100%}.overlay-wrapper .navbar-button{justify-content:end;padding-right:1rem}@media screen and (width <= 576px){.overlay-wrapper .navbar-button{padding-right:0.5rem}}";
const ModusNavbarSearchOverlayStyle0 = modusNavbarSearchOverlayCss;

const ModusNavbarSearchOverlay = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.close = index.createEvent(this, "close", 7);
        this.search = index.createEvent(this, "search", 7);
    }
    componentDidRender() {
        var _a;
        (_a = this.modusTextInput) === null || _a === void 0 ? void 0 : _a.focusInput();
    }
    render() {
        return (index.h(index.Host, { key: 'a46ddd8fae91428a953664b254022e34aec0faea' }, index.h("div", { key: 'a1a056390e6b0be61b8d1436b8a58e3edd4f1393', class: "overlay-wrapper" }, index.h("div", { key: '0e7e82a55e7f4d05e796e0aacb5d594fe9028641', class: "search-box" }, index.h("modus-text-input", { key: '03094e0fe493ecf14b192e59e5ab41a286301d13', placeholder: "Search", size: "large", type: "search", clearable: true, onValueChange: (event) => this.search.emit(event.detail), "include-search-icon": true, ref: (el) => (this.modusTextInput = el) })), index.h("div", { key: '1582aee27b56f2b681e86eca6ff2fd97d9637f5b', class: "navbar-button", "data-test-id": "close-button" }, index.h("span", { key: '97aac7cca2c843862fdf1a9d0339921f103faf59', class: "navbar-button-icon", role: "button", tabIndex: 0, onKeyDown: (event) => event.code === 'Enter' && this.close.emit(), onClick: () => this.close.emit() }, index.h(iconClose.IconClose, { key: '2075c38346b3c9a853ff3657610ea9b2163801e4', size: "24" }))))));
    }
    get element() { return index.getElement(this); }
};
ModusNavbarSearchOverlay.style = ModusNavbarSearchOverlayStyle0;

exports.modus_navbar_apps_menu = ModusNavbarAppsMenu;
exports.modus_navbar_button_menu = ModusNavbarButtonMenu;
exports.modus_navbar_main_menu = ModusNavbarMainMenu;
exports.modus_navbar_notifications_menu = ModusNavbarNotificationsMenu;
exports.modus_navbar_profile_menu = ModusNavbarProfileMenu;
exports.modus_navbar_search_overlay = ModusNavbarSearchOverlay;
